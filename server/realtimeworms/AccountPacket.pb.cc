// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccountPacket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AccountPacket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace AccountPacket {

namespace {

const ::google::protobuf::Descriptor* S_Account_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_Account_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AccountPacket_2eproto() {
  protobuf_AddDesc_AccountPacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AccountPacket.proto");
  GOOGLE_CHECK(file != NULL);
  S_Account_descriptor_ = file->message_type(0);
  static const int S_Account_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Account, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Account, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Account, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Account, y_),
  };
  S_Account_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_Account_descriptor_,
      S_Account::default_instance_,
      S_Account_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Account, _has_bits_[0]),
      -1,
      -1,
      sizeof(S_Account),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Account, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AccountPacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_Account_descriptor_, &S_Account::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AccountPacket_2eproto() {
  delete S_Account::default_instance_;
  delete S_Account_reflection_;
}

void protobuf_AddDesc_AccountPacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023AccountPacket.proto\022\rAccountPacket\":\n\t"
    "S_Account\022\013\n\003uid\030\001 \002(\r\022\n\n\002hp\030\002 \002(\r\022\t\n\001x\030"
    "\003 \002(\r\022\t\n\001y\030\004 \002(\r", 96);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AccountPacket.proto", &protobuf_RegisterTypes);
  S_Account::default_instance_ = new S_Account();
  S_Account::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AccountPacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AccountPacket_2eproto {
  StaticDescriptorInitializer_AccountPacket_2eproto() {
    protobuf_AddDesc_AccountPacket_2eproto();
  }
} static_descriptor_initializer_AccountPacket_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int S_Account::kUidFieldNumber;
const int S_Account::kHpFieldNumber;
const int S_Account::kXFieldNumber;
const int S_Account::kYFieldNumber;
#endif  // !_MSC_VER

S_Account::S_Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountPacket.S_Account)
}

void S_Account::InitAsDefaultInstance() {
}

S_Account::S_Account(const S_Account& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountPacket.S_Account)
}

void S_Account::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  hp_ = 0u;
  x_ = 0u;
  y_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S_Account::~S_Account() {
  // @@protoc_insertion_point(destructor:AccountPacket.S_Account)
  SharedDtor();
}

void S_Account::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_Account::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_Account_descriptor_;
}

const S_Account& S_Account::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AccountPacket_2eproto();
  return *default_instance_;
}

S_Account* S_Account::default_instance_ = NULL;

S_Account* S_Account::New(::google::protobuf::Arena* arena) const {
  S_Account* n = new S_Account;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_Account::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_Account*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, y_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S_Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountPacket.S_Account)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hp;
        break;
      }

      // required uint32 hp = 2;
      case 2: {
        if (tag == 16) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_x;
        break;
      }

      // required uint32 x = 3;
      case 3: {
        if (tag == 24) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_y;
        break;
      }

      // required uint32 y = 4;
      case 4: {
        if (tag == 32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountPacket.S_Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountPacket.S_Account)
  return false;
#undef DO_
}

void S_Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountPacket.S_Account)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 hp = 2;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hp(), output);
  }

  // required uint32 x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->x(), output);
  }

  // required uint32 y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountPacket.S_Account)
}

::google::protobuf::uint8* S_Account::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountPacket.S_Account)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 hp = 2;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hp(), target);
  }

  // required uint32 x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->x(), target);
  }

  // required uint32 y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountPacket.S_Account)
  return target;
}

int S_Account::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_uid()) {
    // required uint32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  if (has_hp()) {
    // required uint32 hp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  if (has_x()) {
    // required uint32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  if (has_y()) {
    // required uint32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  return total_size;
}
int S_Account::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());

    // required uint32 hp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());

    // required uint32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());

    // required uint32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_Account::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S_Account* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_Account>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S_Account::MergeFrom(const S_Account& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S_Account::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_Account::CopyFrom(const S_Account& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Account::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void S_Account::Swap(S_Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_Account::InternalSwap(S_Account* other) {
  std::swap(uid_, other->uid_);
  std::swap(hp_, other->hp_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_Account::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_Account_descriptor_;
  metadata.reflection = S_Account_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_Account

// required uint32 uid = 1;
bool S_Account::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S_Account::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void S_Account::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void S_Account::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
 ::google::protobuf::uint32 S_Account::uid() const {
  // @@protoc_insertion_point(field_get:AccountPacket.S_Account.uid)
  return uid_;
}
 void S_Account::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:AccountPacket.S_Account.uid)
}

// required uint32 hp = 2;
bool S_Account::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S_Account::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
void S_Account::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
void S_Account::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
 ::google::protobuf::uint32 S_Account::hp() const {
  // @@protoc_insertion_point(field_get:AccountPacket.S_Account.hp)
  return hp_;
}
 void S_Account::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:AccountPacket.S_Account.hp)
}

// required uint32 x = 3;
bool S_Account::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S_Account::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
void S_Account::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void S_Account::clear_x() {
  x_ = 0u;
  clear_has_x();
}
 ::google::protobuf::uint32 S_Account::x() const {
  // @@protoc_insertion_point(field_get:AccountPacket.S_Account.x)
  return x_;
}
 void S_Account::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:AccountPacket.S_Account.x)
}

// required uint32 y = 4;
bool S_Account::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S_Account::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
void S_Account::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void S_Account::clear_y() {
  y_ = 0u;
  clear_has_y();
}
 ::google::protobuf::uint32 S_Account::y() const {
  // @@protoc_insertion_point(field_get:AccountPacket.S_Account.y)
  return y_;
}
 void S_Account::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:AccountPacket.S_Account.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace AccountPacket

// @@protoc_insertion_point(global_scope)
