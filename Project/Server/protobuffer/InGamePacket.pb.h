// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InGamePacket.proto

#ifndef PROTOBUF_InGamePacket_2eproto__INCLUDED
#define PROTOBUF_InGamePacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace InGamePacket {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_InGamePacket_2eproto();
void protobuf_AssignDesc_InGamePacket_2eproto();
void protobuf_ShutdownFile_InGamePacket_2eproto();

class C_Move;
class S_Move;
class C_Stop;
class S_Stop;

// ===================================================================

class C_Move : public ::google::protobuf::Message {
 public:
  C_Move();
  virtual ~C_Move();

  C_Move(const C_Move& from);

  inline C_Move& operator=(const C_Move& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Move& default_instance();

  void Swap(C_Move* other);

  // implements Message ----------------------------------------------

  inline C_Move* New() const { return New(NULL); }

  C_Move* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_Move& from);
  void MergeFrom(const C_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float velocity = 4;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 4;
  float velocity() const;
  void set_velocity(float value);

  // @@protoc_insertion_point(class_scope:InGamePacket.C_Move)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_velocity();
  inline void clear_has_velocity();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  float x_;
  float y_;
  float velocity_;
  friend void  protobuf_AddDesc_InGamePacket_2eproto();
  friend void protobuf_AssignDesc_InGamePacket_2eproto();
  friend void protobuf_ShutdownFile_InGamePacket_2eproto();

  void InitAsDefaultInstance();
  static C_Move* default_instance_;
};
// -------------------------------------------------------------------

class S_Move : public ::google::protobuf::Message {
 public:
  S_Move();
  virtual ~S_Move();

  S_Move(const S_Move& from);

  inline S_Move& operator=(const S_Move& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Move& default_instance();

  void Swap(S_Move* other);

  // implements Message ----------------------------------------------

  inline S_Move* New() const { return New(NULL); }

  S_Move* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Move& from);
  void MergeFrom(const S_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float velocity = 4;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 4;
  float velocity() const;
  void set_velocity(float value);

  // @@protoc_insertion_point(class_scope:InGamePacket.S_Move)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_velocity();
  inline void clear_has_velocity();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  float x_;
  float y_;
  float velocity_;
  friend void  protobuf_AddDesc_InGamePacket_2eproto();
  friend void protobuf_AssignDesc_InGamePacket_2eproto();
  friend void protobuf_ShutdownFile_InGamePacket_2eproto();

  void InitAsDefaultInstance();
  static S_Move* default_instance_;
};
// -------------------------------------------------------------------

class C_Stop : public ::google::protobuf::Message {
 public:
  C_Stop();
  virtual ~C_Stop();

  C_Stop(const C_Stop& from);

  inline C_Stop& operator=(const C_Stop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Stop& default_instance();

  void Swap(C_Stop* other);

  // implements Message ----------------------------------------------

  inline C_Stop* New() const { return New(NULL); }

  C_Stop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_Stop& from);
  void MergeFrom(const C_Stop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_Stop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  float uid() const;
  void set_uid(float value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:InGamePacket.C_Stop)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float uid_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_InGamePacket_2eproto();
  friend void protobuf_AssignDesc_InGamePacket_2eproto();
  friend void protobuf_ShutdownFile_InGamePacket_2eproto();

  void InitAsDefaultInstance();
  static C_Stop* default_instance_;
};
// -------------------------------------------------------------------

class S_Stop : public ::google::protobuf::Message {
 public:
  S_Stop();
  virtual ~S_Stop();

  S_Stop(const S_Stop& from);

  inline S_Stop& operator=(const S_Stop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Stop& default_instance();

  void Swap(S_Stop* other);

  // implements Message ----------------------------------------------

  inline S_Stop* New() const { return New(NULL); }

  S_Stop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Stop& from);
  void MergeFrom(const S_Stop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_Stop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:InGamePacket.S_Stop)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_InGamePacket_2eproto();
  friend void protobuf_AssignDesc_InGamePacket_2eproto();
  friend void protobuf_ShutdownFile_InGamePacket_2eproto();

  void InitAsDefaultInstance();
  static S_Stop* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// C_Move

// required uint32 uid = 1;
inline bool C_Move::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_Move::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_Move::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_Move::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 C_Move::uid() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Move.uid)
  return uid_;
}
inline void C_Move::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Move.uid)
}

// required float x = 2;
inline bool C_Move::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_Move::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_Move::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_Move::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float C_Move::x() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Move.x)
  return x_;
}
inline void C_Move::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Move.x)
}

// required float y = 3;
inline bool C_Move::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_Move::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_Move::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C_Move::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float C_Move::y() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Move.y)
  return y_;
}
inline void C_Move::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Move.y)
}

// required float velocity = 4;
inline bool C_Move::has_velocity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C_Move::set_has_velocity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C_Move::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C_Move::clear_velocity() {
  velocity_ = 0;
  clear_has_velocity();
}
inline float C_Move::velocity() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Move.velocity)
  return velocity_;
}
inline void C_Move::set_velocity(float value) {
  set_has_velocity();
  velocity_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Move.velocity)
}

// -------------------------------------------------------------------

// S_Move

// required uint32 uid = 1;
inline bool S_Move::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_Move::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_Move::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_Move::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 S_Move::uid() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Move.uid)
  return uid_;
}
inline void S_Move::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Move.uid)
}

// required float x = 2;
inline bool S_Move::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_Move::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_Move::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_Move::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_Move::x() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Move.x)
  return x_;
}
inline void S_Move::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Move.x)
}

// required float y = 3;
inline bool S_Move::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_Move::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_Move::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_Move::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_Move::y() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Move.y)
  return y_;
}
inline void S_Move::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Move.y)
}

// required float velocity = 4;
inline bool S_Move::has_velocity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_Move::set_has_velocity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_Move::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_Move::clear_velocity() {
  velocity_ = 0;
  clear_has_velocity();
}
inline float S_Move::velocity() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Move.velocity)
  return velocity_;
}
inline void S_Move::set_velocity(float value) {
  set_has_velocity();
  velocity_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Move.velocity)
}

// -------------------------------------------------------------------

// C_Stop

// required float uid = 1;
inline bool C_Stop::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_Stop::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_Stop::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_Stop::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline float C_Stop::uid() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Stop.uid)
  return uid_;
}
inline void C_Stop::set_uid(float value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Stop.uid)
}

// required float x = 2;
inline bool C_Stop::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_Stop::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_Stop::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_Stop::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float C_Stop::x() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Stop.x)
  return x_;
}
inline void C_Stop::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Stop.x)
}

// required float y = 3;
inline bool C_Stop::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_Stop::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_Stop::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C_Stop::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float C_Stop::y() const {
  // @@protoc_insertion_point(field_get:InGamePacket.C_Stop.y)
  return y_;
}
inline void C_Stop::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.C_Stop.y)
}

// -------------------------------------------------------------------

// S_Stop

// required uint32 uid = 1;
inline bool S_Stop::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_Stop::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_Stop::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_Stop::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 S_Stop::uid() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Stop.uid)
  return uid_;
}
inline void S_Stop::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Stop.uid)
}

// required float x = 2;
inline bool S_Stop::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_Stop::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_Stop::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_Stop::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_Stop::x() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Stop.x)
  return x_;
}
inline void S_Stop::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Stop.x)
}

// required float y = 3;
inline bool S_Stop::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_Stop::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_Stop::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_Stop::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_Stop::y() const {
  // @@protoc_insertion_point(field_get:InGamePacket.S_Stop.y)
  return y_;
}
inline void S_Stop::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:InGamePacket.S_Stop.y)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace InGamePacket

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InGamePacket_2eproto__INCLUDED
